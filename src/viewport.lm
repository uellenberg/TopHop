inline const new_game_x = -20;

//Move the viewport to the right each frame.
createBehavior!("viewport_mover", {
    //Allow modifying x & y.
    setMut!("base.transform.x");
    setMut!("base.transform.y");

    setVal!("amount", .25);

    setValAction!("base.transform.x", {
        const player_x = {
            state = 0;

            selectBehavior!("player", {
                state = getValSelect!("transform.x");
            });
        };

        state = x + getVal!("amount") + player_x;

        //Check if they are dead, and if they are, reset to (0,0).
        const dead = {
            state = 0;

            selectBehavior!("death", {
                state = getValSelect!("death.dead");
            });
        };

        //Check if they reached the end, and if they are, go to the end game location.
        const ended = {
            state = 0;

            selectBehavior!("game_end", {
                state = getValSelect!("game_end.ended");
            });
        };

        //If they are dead or the player's x if after the game end point.
        if(dead) {
            state = 0;
        } else if(ended) {
            state = new_game_x;
        }
    }, 10);

    setValAction!("base.transform.y", {
        const player_y = {
            state = 0;

            selectBehavior!("player", {
                state = getValSelect!("transform.y");
            });
        };

        state = y + player_y;

        //Check if they are dead, and if they are, reset to (0,0).
        const dead = {
            state = 0;

            selectBehavior!("death", {
                state = getValSelect!("death.dead");
            });
        };

        //Check if they reached the end, and if they are, go to the end game location.
        const ended = {
            state = 0;

            selectBehavior!("game_end", {
                state = getValSelect!("game_end.ended");
            });
        };

        //If they are dead or the player's x if after the game end point.
        if(dead || ended) {
            state = 0;
        }
    }, 10);
});

//Create the viewport.
usePrefab!("window", {
    //Make it move.
    useBehavior!("viewport_mover");
}, 22, 14);